(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{384:function(t,a,s){"use strict";s.r(a);var n=s(7),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"一、spring概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、spring概述"}},[t._v("#")]),t._v(" 一、Spring概述")]),t._v(" "),a("p",[t._v("Spring是⼀个 轻量级的控制反转和⾯向切⾯的容器 框架，⽤来解决企业项⽬开发的复杂度问题—解耦")]),t._v(" "),a("h2",{attrs:{id:"_1-1-spring特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-spring特征"}},[t._v("#")]),t._v(" 1.1 "),a("strong",[t._v("Spring特征")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("轻量级")]),t._v("：从大小与开销两方面而言Spring都是轻量的。完整的Spring框架可以在一个大小只有1M多的JAR文件里发布,并且Spring所需的处理开销也是微不足道的。此外, Spring是"),a("code",[t._v("非侵入式的")]),t._v(":典型的, Spring应用中的对象不依赖于Spring的特定类。")]),t._v(" "),a("li",[a("code",[t._v("控制反转")]),t._v("：IOC——Inversion of Control，指的是将对象的创建权交给 Spring 去创建。使用 Spring 之前，对象的创建都是由我们自己在代码中new创建。而使用 Spring 之后。对象的创建都是给了 Spring 框架。Spring通过控制反转IOC的技术促进了低耦合。")]),t._v(" "),a("li",[a("code",[t._v("依赖注入")]),t._v("：DI——Dependency Injection，是指依赖的对象不需要手动调用 setXX 方法去设置，而是通过配置赋值。")]),t._v(" "),a("li",[a("code",[t._v("面向切面编程")]),t._v("：Spring支持面向切面的编程,并且把应用业务逻辑和系统服务分开，可以在不改变原有业务逻辑的情况下实现对业务的增强")]),t._v(" "),a("li",[a("code",[t._v("容器")]),t._v("：Spring包含并管理应用对象的配置和生命周期,在这个意义上它是一种容器,你可以配置你的每个bean如何被创建---基于一个可配置原型，你的bean可以创建一个单独的实例或者每次需要时都生成一个新的实例--以及它们是如何相互关联的。")]),t._v(" "),a("li",[a("code",[t._v("组件化")]),t._v("：Spring可以将简单的组件配置、组合成为复杂的应用。在Spring中,应用对象被声明式地组合,典型的是在一个XML文件里。Spring也提供了很多基础功能(事务管理、持久化框架集成等) , 将应用逻辑的开发留给开发者")]),t._v(" "),a("li",[a("code",[t._v("一站式")]),t._v("：在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库（实际上 Spring 自身也提供了表现层的 SpringMVC 和持久层的 Spring JDBC）")])]),t._v(" "),a("h2",{attrs:{id:"_1-2-spring-体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-spring-体系结构"}},[t._v("#")]),t._v(" 1.2 "),a("strong",[t._v("Spring 体系结构")])]),t._v(" "),a("p",[t._v("Spring 是模块化的，允许你挑选和选择适用于你的模块，不必要把剩余部分也引入。下面的部分对在 Spring 框架中所有可用的模块给出了详细的介绍。Spring 框架提供约 20 个模块，可以根据应用程序的要求来使用。")]),t._v(" "),a("p",[t._v("下图对应的是 Spring4.x 版本。目前最新的 5.x 版本中 Web 模块的 Portlet 组件已经被废弃掉，同时增加了用于异步响应式处理的 WebFlux 组件。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"http://img.aismy.top/img/jvme0c60b4606711fc4a0b6faf03230247a.png",alt:"Spring主要模块"}}),t._v(" "),a("h3",{attrs:{id:"核心容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心容器"}},[t._v("#")]),t._v(" 核心容器")]),t._v(" "),a("p",[t._v("核心容器(Core Container)由 "),a("strong",[t._v("spring-core，spring-beans，spring-context，spring-context-support和spring-expression")]),t._v("（SpEL，Spring 表达式语言，Spring Expression Language）等模块组成，它们的细节如下：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("spring-core")]),t._v(" 模块提供了框架的基本组成部分，包括 IoC 和依赖注入功能。 Core模块主要包含Spring框架基本的核心工具类，Spring的其他组件要都要使用到这个包里的类，Core模块是其他组件的基本核心。当然也可以在自己的应用系统中使用这些工具类。")]),t._v(" "),a("li",[a("strong",[t._v("spring-beans")]),t._v(" 模块提供 BeanFactory，工厂模式的微妙实现，它移除了编码式单例的需要，并且可以把配置和依赖从实际编码逻辑中解耦。")]),t._v(" "),a("li",[a("strong",[t._v("context")]),t._v(" 模块建立在由 "),a("strong",[t._v("core")]),t._v("和 "),a("strong",[t._v("beans")]),t._v(" 模块的基础上建立起来的，它以一种类似于 JNDI 注册的方式访问对象。Context 模块继承自 Bean 模块，并且添加了国际化（比如，使用资源束）、事件传播、资源加载和透明地创建上下文（比如，通过 Servelet 容器）等功能。Context 模块也支持 Java EE 的功能，比如 EJB、JMX 和远程调用等。"),a("strong",[t._v("ApplicationContext")]),t._v(" 接口是 Context 模块的焦点。"),a("strong",[t._v("spring-context-support")]),t._v(" 提供了对第三方集成到 Spring 上下文的支持，比如缓存（EhCache, Guava, JCache）、邮件（JavaMail）、调度（CommonJ, Quartz）、模板引擎（FreeMarker, JasperReports, Velocity）等。")]),t._v(" "),a("li",[a("strong",[t._v("spring-expression")]),t._v(" 模块提供了强大的表达式语言，用于在运行时查询和操作对象图。它是 JSP2.1 规范中定义的统一表达式语言的扩展，支持 set 和 get 属性值、属性赋值、方法调用、访问数组集合及索引的内容、逻辑算术运算、命名变量、通过名字从 Spring IoC 容器检索对象，还支持列表的投影、选择以及聚合等。")])]),t._v(" "),a("h4",{attrs:{id:"引入spring-core"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入spring-core"}},[t._v("#")]),t._v(" "),a("strong",[t._v("引入spring-core")])]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-core"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.3.5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("其中spring-jcl就是java commons-logging "),a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526164825225.png",alt:"image-20220526164825225"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526164618088.png",alt:"image-20220526164618088"}})]),t._v(" "),a("h4",{attrs:{id:"引入spring-beans"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入spring-beans"}},[t._v("#")]),t._v(" "),a("strong",[t._v("引入spring-beans")])]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-beans"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.3.5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526165626293.png",alt:"image-20220526165626293"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170053790.png",alt:"image-20220526170053790"}}),t._v("beans中的部分内容")]),t._v(" "),a("h4",{attrs:{id:"引入spring-expression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入spring-expression"}},[t._v("#")]),t._v(" 引入spring-expression")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-expression"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.3.5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170227876.png",alt:"image-20220526170227876"}})]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"http://img.aismy.top/img/image-20220526170303882.png",alt:"image-20220526170303882"}}),t._v(" "),a("h4",{attrs:{id:"引入spring-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入spring-context"}},[t._v("#")]),t._v(" 引入spring-context")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-context"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.3.5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170513767.png",alt:"image-20220526170513767"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170526078.png",alt:"image-20220526170526078"}})]),t._v(" "),a("h4",{attrs:{id:"引入spring-context-support"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入spring-context-support"}},[t._v("#")]),t._v(" 引入spring-context-support")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-context-support"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.3.5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170912324.png",alt:"image-20220526170912324"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526170947013.png",alt:"image-20220526170947013"}})]),t._v(" "),a("h4",{attrs:{id:"依赖关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖关系"}},[t._v("#")]),t._v(" 依赖关系")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/1540290875453691.png",alt:"Spring 体系结构"}})]),t._v(" "),a("p",[t._v("因为spring-core依赖了commons-logging，而其他模块都依赖了spring-core，所以整个spring框架都依赖了commons-logging。\n如依赖关系Spring离不开日志，但是日志框架有多种也不一定使用commons-logging如果有自己的日志实现如log4j，可以排除对commons-logging的依赖，没有日志实现而排除了commons-logging依赖，编译报错。")]),t._v(" "),a("h3",{attrs:{id:"数据访问-集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据访问-集成"}},[t._v("#")]),t._v(" 数据访问/集成")]),t._v(" "),a("p",[t._v("数据访问/集成层包括 JDBC，ORM，OXM，JMS 和事务处理模块，它们的细节如下：\n（注：JDBC=Java Data Base Connectivity，ORM=Object Relational Mapping，OXM=Object XML Mapping，JMS=Java Message Service）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("JDBC")]),t._v(" 模块提供了 JDBC 抽象层，它消除了冗长的 JDBC 编码和对数据库供应商特定错误代码的解析。")]),t._v(" "),a("li",[a("strong",[t._v("ORM")]),t._v(" 模块提供了对流行的对象关系映射 API 的集成，包括 JPA、JDO 和 Hibernate 等。通过此模块可以让这些 ORM 框架和 spring的其它功能整合，比如前面提及的事务管理。")]),t._v(" "),a("li",[a("strong",[t._v("OXM")]),t._v(" 模块提供了对 OXM 实现的支持，比如 JAXB、Castor、XML Beans、JiBX、XStream 等。")]),t._v(" "),a("li",[a("strong",[t._v("JMS")]),t._v(" 模块包含生产（produce）和消费（consume）消息的功能。从 Spring 4.1 开始，集成了 spring-messaging 模块。")]),t._v(" "),a("li",[a("strong",[t._v("事务")]),t._v("模块为实现特殊接口类及所有的 POJO 支持编程式和声明式事务管理。（注：编程式事务需要自己写 beginTransaction()、commit()、rollback() 等事务管理方法，声明式事务是通过注解或配置由 spring 自动处理，编程式事务粒度更细）")])]),t._v(" "),a("h3",{attrs:{id:"web"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[t._v("#")]),t._v(" Web")]),t._v(" "),a("p",[t._v("Web 层由 Web，Web-MVC，Web-Socket 和 Web-Portlet 组成，它们的细节如下：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Web")]),t._v(" 模块提供面向 web 的基本功能和面向 web 的应用上下文，比如多部分（multipart）文件上传功能、使用 Servlet 监听器初始化 IoC 容器等。它还包括 HTTP 客户端以及 Spring 远程调用中与 web 相关的部分。--对 Web 功能的实现提供一些最基础的支持。")]),t._v(" "),a("li",[a("strong",[t._v("Web-MVC")]),t._v(" 模块为 web 应用提供了模型视图控制（MVC）和 REST Web服务的实现。Spring 的 MVC 框架可以使领域模型代码和 web 表单完全地分离，且可以与 Spring 框架的其它所有功能进行集成。--提供对 Spring MVC 的实现。")]),t._v(" "),a("li",[a("strong",[t._v("Web-Socket")]),t._v(" 模块为 WebSocket-based 提供了支持，而且在 web 应用程序中提供了客户端和服务器端之间通信的两种方式。")]),t._v(" "),a("li",[a("strong",[t._v("spring-webflux")]),t._v("提供对 WebFlux 的支持。WebFlux 是 Spring Framework 5.0 中引入的新的响应式框架。与 Spring MVC 不同，它不需要 Servlet API，是完全异步.")])]),t._v(" "),a("h3",{attrs:{id:"test模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test模块"}},[t._v("#")]),t._v(" Test模块")]),t._v(" "),a("p",[t._v("Test 模块：Spring 支持 Junit 和 TestNG 测试框架，而且还额外提供了一些基于 Spring 的测试功能，比如在测试 Web 框架时，模拟 Http 请求的功能。")]),t._v(" "),a("h3",{attrs:{id:"aop、aspects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop、aspects"}},[t._v("#")]),t._v(" AOP、Aspects")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("AOP")]),t._v(" 模块提供了面向方面（切面）的编程实现，允许你定义方法拦截器和切入点对代码进行干净地解耦，从而使实现功能的代码彻底的解耦出来。使用源码级的元数据，可以用类似于.Net属性的方式合并行为信息到代码中。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Aspects")]),t._v(" 模块提供了与 "),a("strong",[t._v("AspectJ")]),t._v(" 的集成，这是一个功能强大且成熟的面向切面编程（AOP）框架。")]),t._v(" "),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Instrumentation")]),t._v(" 模块在一定的应用服务器中提供了类 instrumentation 的支持和类加载器的实现。")]),t._v(" "),a("li",[a("strong",[t._v("Messaging")]),t._v(" 模块为 STOMP 提供了支持作为在应用程序中 WebSocket 子协议的使用。它也支持一个注解编程模型，它是为了选路和处理来自 WebSocket 客户端的 STOMP 信息。")])])])]),t._v(" "),a("h1",{attrs:{id:"二、spring-ioc-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、spring-ioc-容器"}},[t._v("#")]),t._v(" 二、Spring IoC 容器")]),t._v(" "),a("h2",{attrs:{id:"_2-1-ioc-容器和-bean-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-ioc-容器和-bean-介绍"}},[t._v("#")]),t._v(" 2.1 IOC 容器和 bean 介绍")]),t._v(" "),a("p",[t._v("Spring 容器是 Spring 框架的核心。容器将创建对象，把它们连接在一起，配置它们，并管理他们的整个生命周期从创建到销毁。Spring 容器使用依赖注入（DI）来管理组成一个应用程序的组件。这些对象被称为 Spring Beans。")]),t._v(" "),a("p",[t._v("通过阅读配置元数据提供的指令，容器知道对哪些对象进行实例化，配置和组装。配置元数据可以通过 XML，Java 注释或 Java 代码来表示。下图是 Spring 如何工作的高级视图。 Spring IoC 容器利用 Java 的 POJO 类和配置元数据来生成完全配置和可执行的系统或应用程序。")]),t._v(" "),a("p",[a("strong",[t._v("IOC 容器")]),t._v('具有依赖注入功能的容器，它可以创建对象，IOC 容器负责实例化、定位、配置应用程序中的对象及建立这些对象间的依赖。通常new一个实例，控制权由程序员控制，而"控制反转"是指new实例工作不由程序员来做而是交给Spring容器来做。在Spring中'),a("a",{attrs:{href:"https://www.w3cschool.cn/wkspring/j3181mm3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BeanFactory"),a("OutboundLink")],1),t._v("是IOC容器的实际代表者。")]),t._v(" "),a("p",[a("strong",[t._v("Spring容器高层视图")])]),t._v(" "),a("p",[t._v("Spring 启动时读取应用程序提供的 Bean 配置信息，并在 Spring 容器中生成一份相应的 Bean 配置注册\n表，然后根据这张注册表实例化 Bean，装配好 Bean 之间的依赖关系，为上层应用提供准备就绪的运行\n环境。其中 Bean 缓存池为 HashMap 实现。在Spring中"),a("code",[t._v("BeanFactory")]),t._v("是IOC容器的实际代表者。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.aismy.top/img/image-20220526193030415.png",alt:"image-20220526193030415"}})]),t._v(" "),a("p",[a("strong",[t._v("Spring 提供了以下两种不同类型的容器")])]),t._v(" "),a("p",[a("code",[t._v("Spring BeanFactory")]),t._v(" 容器:它是最简单的容器，给 DI 提供了基本的支持，它用 org.springframework.beans.factory.BeanFactory 接口来定义。BeanFactory 或者相关的接口，如 BeanFactoryAware，InitializingBean，DisposableBean，在 Spring 中仍然存在具有大量的与 Spring 整合的第三方框架的反向兼容性的目的。")]),t._v(" "),a("p",[a("code",[t._v("Spring ApplicationContext")]),t._v(" 容器:该容器添加了更多的企业特定的功能，例如从一个属性文件中解析文本信息的能力，发布应用程序事件给感兴趣的事件监听器的能力。该容器是由 org.springframework.context.ApplicationContext 接口定义。")]),t._v(" "),a("p",[a("code",[t._v("BeanFactory")]),t._v("提供了配置框架和基本功能，而"),a("code",[t._v("ApplicationContext")]),t._v("增加了更多特定于 Enterprise 的功能。"),a("code",[t._v("ApplicationContext")]),t._v("是"),a("code",[t._v("BeanFactory")]),t._v("的完整超集，通常不建议使用BeanFactory。BeanFactory 仍然可以用于轻量级的应用程序，如移动设备或基于 applet 的应用程序，其中它的数据量和速度是显著。")]),t._v(" "),a("h2",{attrs:{id:"_2-2-beanfactory-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-beanfactory-容器"}},[t._v("#")]),t._v(" 2.2 BeanFactory 容器")]),t._v(" "),a("p",[t._v("BeanFactory 是 Spring 框架的基础设施，面向 Spring 本身；ApplicationContext 面向使用 Spring 框架的开发者，几乎所有的应用场合我们都直接使用 ApplicationContext 而非底层的 BeanFactory。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"http://img.aismy.top/img/image-20220526210457322.png",alt:"image-20220526210457322"}})])}),[],!1,null,null,null);a.default=r.exports}}]);